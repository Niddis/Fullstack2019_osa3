{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","_ref","addPerson","newName","newNumber","handleNameChange","handleNumberChange","react_default","a","createElement","onSubmit","value","onChange","type","Persons","persons","deletoi","map","person","key","id","name","number","onClick","Filter","newSearch","handleSearchChange","baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","Notification","notification","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","style","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewSearch","_useState9","_useState10","filterPersons","setFilterPersons","_useState11","_useState12","setNotification","useEffect","personService","initialPersons","notify","arguments","length","undefined","setTimeout","components_Notification","components_Filter","event","target","personFilter","filter","p","toLowerCase","includes","components_PersonForm","preventDefault","some","existingPerson","find","e","changedPerson","objectSpread","idc","window","confirm","returnedPerson","change","per","catch","error","missing","m","newPersons","virhe","console","log","components_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3829035d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        nimi: <input value={newName} onChange={handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        numero: <input value={newNumber} onChange={handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">lisää</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, deletoi}) => {\r\n  const rows = () => persons.map(person => \r\n    <div key={person.id}>\r\n      <p>{person.name} {person.number}</p>\r\n      <button onClick={() => deletoi(person.id)}>poista</button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {rows()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({newSearch, handleSearchChange}) => {\r\n  return (\r\n    <div>\r\n      rajaa näytettäviä: <input value={newSearch} onChange={handleSearchChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll= () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletep = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletep }","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  const notificationStyle = {\r\n    color: notification.type === 'error' ? 'red' : 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  if (notification.message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport { setTimeout } from 'timers';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  const [filterPersons, setFilterPersons] = useState([])\n  const [notification, setNotification] = useState({message: null})\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setFilterPersons(initialPersons)\n      })\n  }, [])\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n    const personFilter = persons.filter(p => p.name.toLowerCase().includes(event.target.value.toLowerCase()))\n    setFilterPersons(personFilter)\n  }\n\n  const notify = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => setNotification({ message: null }), 3000)\n  }\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.some(p => p.name === newName)) {\n      const existingPerson = persons.find(e => e.name === newName)\n      const changedPerson = {...existingPerson, number: newNumber}\n      const idc = changedPerson.id\n      if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        personService\n          .update(idc, changedPerson)\n          .then(returnedPerson => {\n            const change = persons.map(per => per.id !== idc ? per : returnedPerson)\n            setPersons(change)\n            setFilterPersons(change)\n            notify(`Henkilön ${returnedPerson.name} numero muutettu`)\n          })\n          .catch(error => {\n            notify(`Henkilö ${changedPerson.name} on jo poistettu`, 'error')\n            const missing = persons.filter(m => m.id !== idc)\n            setPersons(missing)\n            setFilterPersons(missing)\n          })\n      }\n    } else {\n      const personObj = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObj)\n        .then(returnedPerson => {\n          const newPersons = persons.concat(returnedPerson)\n          setPersons(newPersons)\n          setFilterPersons(newPersons)\n          notify(`${returnedPerson.name} lisätty`)\n        })\n        .catch(error => {\n          const virhe = error.response.data\n          console.log(virhe)\n          notify(virhe, 'error')\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = id => {\n    const p = persons.find(p => p.id === id)\n    if (window.confirm(`Poistetaanko ${p.name}`)) {\n      personService.deletep(id)\n      const newPersons = persons.filter(per => per.id !== id)\n      setPersons(newPersons)\n      setFilterPersons(newPersons)\n      notify(`${p.name} poistettiin`)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification notification={notification} />\n      <Filter newSearch={newSearch} handleSearchChange={handleSearchChange}/>\n      <h3>Lisää uusi</h3>\n      <PersonForm \n        addPerson={addPerson} \n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numerot</h3>\n      <Persons persons={filterPersons} deletoi={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}